<launch>
  <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 
  
 <!-- Spawn baby Husky ^_^ -->
  <include file="$(find husky_gazebo)/launch/husky_empty_world.launch">
    <arg name="world_name" value="$(arg world_file)"/>
    <!--arg name="world_name" value="$(find fei_gazebo)/worlds/christ.world"/
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="ur5_enabled" value="$(arg ur5_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/> -->
  </include>

<!-- Run AMCL -->
  <include file="$(find husky_navigation)/launch/amcl.launch" />

  <!--- Run Move Base -->
  <include file="$(find husky_navigation)/launch/move_base.launch" />

  <group ns="uav1">
   <include file="$(find voronoi_move_base)/launch/spawn_quadrotor.launch">
     <arg name="name" default="quadrotor1"/>
     <arg name="model" value="$(find voronoi_move_base)/urdf/quadrotor_with_kinect.gazebo.xacro"/>
     <arg name="tf_prefix" default="uav1"/>
     <arg name="ns" default="/uav1/uav1/"/>
     <arg name="x" default="-1"/>
     <arg name="y" default="1"/>
     <arg name="z" default="0.3"/>   
   </include>
</group>  
  
  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
</launch>
